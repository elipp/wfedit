#version 400

vec3 bezier2(vec3 a, vec3 b, float t) {
    return mix(a, b, t);
}
vec3 bezier3(vec3 a, vec3 b, vec3 c, float t) {
    return mix(bezier2(a, b, t), bezier2(b, c, t), t);
}
vec3 bezier4(vec3 a, vec3 b, vec3 c, vec3 d, float t) {
    return mix(bezier3(a, b, c, t), bezier3(b, c, d, t), t);
}

layout(isolines) in;
in vec4 coefs_TCS_out[];
uniform mat4 uMVP;

float y_val(float x) {
    float x2 = x*x;
    float x3 = x2*x;
	return dot(vec4(x3, x2, x, 1), coefs_TCS_out[0]);
}

out float dydx;

const float dx = float(0.015625);

void main() {
    float X = gl_TessCoord.x;
    //vec3 ePos = bezier4(tcPos[0], tcPos[1], tcPos[2], tcPos[3], t);
    float Y = y_val(X);

    gl_Position = uMVP * vec4(X, Y, 0.0, 1);
    dydx = (Y - y_val(X-dx))/dx;
}
